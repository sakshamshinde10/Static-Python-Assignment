# -*- coding: utf-8 -*-
"""Analysis_of_cleaned_dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yXaL4LoNs4M8cwTzKFKQLf4wS9ww1yRX
"""

### Importing ##
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

### Cleaning file: CONVENIENT_global_confirmed_cases ###
dataset = pd.read_csv("/content/clean_covid_data.csv")

dataset

### Dataset Shape ###
dataset.shape

dataset.dtypes

dataset = dataset.set_index(["WHO Region","Country/Region"])

dataset

### Calculating the sum of confirmed cases of all country ###
confirmed_cases_sum = dataset["Confirmed"].sum()
print(f"The sum of confirmed cases of all countries is: {confirmed_cases_sum}")

### Calculate the sum of all columns ##
column_sums = dataset.sum(axis=0)
column_sums

### Sum of each column ###
print("Sum of confirmed cases: ",column_sums['Confirmed'])
print("Sum of deaths: ",column_sums['Deaths'])
print("Sum of recovered: ",column_sums['Recovered'])

### Chart to visualize the sum of confirmed case, Deaths case, Recovered case. ###
confirmed_case = column_sums['Confirmed']
deaths_case = column_sums['Deaths']
recovered_case = column_sums['Recovered']
labels = ['Confirmed', 'Deaths', 'Recovered']

### Chart to visualize the sum of confirmed case, Deaths case, Recovered case. ###
plt.bar(labels, [confirmed_case, deaths_case, recovered_case], color = "Red")
plt.title("Sum of Confirmed, Deaths, and Recovered Cases")
plt.xlabel("Category")
plt.ylabel("Number of Cases")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Create a pie chart new cases, new deaths, and new recovered cases ###
labels = ("New Confirmed", "New Deaths", "New Recovered")
values = (confirmed_case, deaths_case, recovered_case)
plt.pie(values, labels=labels, colors=["blue", "green", "red"], autopct="%1.1f%%", startangle=90)
plt.title("Sum of New Cases, Deaths, and Recovered Cases")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Get total confirmed cases by country ###

confirmed_cases_by_country = dataset.groupby("Country/Region")["Confirmed"].sum()
print(confirmed_cases_by_country)

### Sorting Country according to the total confirmed cases in Highest ###
total_confirmed_cases = confirmed_cases_by_country.sort_values(ascending=False)
print(total_confirmed_cases)

### Top 5 countries with the most confirmed cases ###
top_5_countries = total_confirmed_cases.head(5)

### Graph of the top 5 countries with the most confirmed cases ###
plt.bar([str(c) for c in top_5_countries.index], top_5_countries.values, color = "Red")
plt.ylabel("Number of confirmed cases")
plt.title("Top 5 Countries with the Most Confirmed Cases")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Sorting Country according to the least total confirmed cases ###
total_confirmed_cases = confirmed_cases_by_country.sort_values(ascending=True)
print(total_confirmed_cases)

# Get the bottom 5 countries with the least confirmed cases
bottom_5_countries = total_confirmed_cases.head(5)

### Bottom 5 countries with the most confirmed cases ###
plt.bar([str(c) for c in bottom_5_countries.index], bottom_5_countries.values, color = "Green")
plt.ylabel("Number of confirmed cases")
plt.title("Bottom 5 Countries with the Least Confirmed Cases")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Get total of New cases by country ###
confirmed_cases_by_country = dataset.groupby("Country/Region")[["New cases"]].sum()
print(confirmed_cases_by_country)

### Sorting Country according to the total New Highest case ###
total_New_case = confirmed_cases_by_country.sort_values(by=['New cases'], ascending=False)

print(total_New_case)

# Get the Top 5 countries with most New cases
top_5_countries = total_New_case.head(5)

### Top 5 countries with the most confirmed cases ###
plt.plot([str(c) for c in top_5_countries.index], top_5_countries.values, color = "Orange")
plt.ylabel("Number of New cases")
plt.title("Top 5 Countries with the Most New Cases")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Total of New deaths by all country ###
confirmed_cases_by_country = dataset.groupby("Country/Region")[["New deaths"]].sum()
print(confirmed_cases_by_country)

### Sorting Country according to the total New deaths ###
total_New_death = confirmed_cases_by_country.sort_values(by=["New deaths"], ascending=False)

print(total_New_death)

###Top 5 countries with the total New deaths ###
top_5_countries = total_New_death.head(5)

### Top 5 countries with the most new deaths ###
plt.plot([str(c) for c in top_5_countries.index], top_5_countries.values, color = "Red")
plt.ylabel("Number of New Deaths")
plt.title("Top 5 Countries with the Most New Deaths")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

### Total of New deaths by all country ###
confirmed_cases_by_country = dataset.groupby("Country/Region")[["New recovered"]].sum()
print(confirmed_cases_by_country)

### Sorting Country according to the total New Recovered ###
total_New_Recover = confirmed_cases_by_country.sort_values(by=["New recovered"], ascending=False)

print(total_New_Recover)

###Top 5 countries with the total New Recovered ###
top_5_countries = total_New_death.head(5)

### Top 5 countries with the most new deaths ###
plt.plot([str(c) for c in top_5_countries.index], top_5_countries.values, color = "Green")
plt.ylabel("Number of New Recovered Cases")
plt.title("Top 5 Countries with the Most New Recover")
plt.xticks(rotation=90)
plt.tight_layout()
plt.grid()
plt.show()

